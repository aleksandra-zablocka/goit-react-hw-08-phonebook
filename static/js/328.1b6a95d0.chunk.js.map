{"version":3,"file":"static/js/328.1b6a95d0.chunk.js","mappings":"uMACA,EAA8B,iCAA9B,EAA4E,gCAA5E,EAAsH,6B,UCDzGA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACtBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,EACvBC,EAAc,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,EAEnBC,EAAe,SAAAN,GAAK,OAAIA,EAAMO,MAAV,E,oBCHjC,EAAyB,uBAAzB,EAA8D,4B,SC6B9D,EAxBe,WACb,IAAMA,GAASC,EAAAA,EAAAA,IAAYF,GACrBG,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBACED,UAAWC,EACXC,KAAK,OACLC,KAAK,SACLC,MAAOR,EACPS,QAAQ,oBACRC,MAAM,yIACNC,SAbe,SAAAC,GACnBV,GAASW,EAAAA,EAAAA,GAAUD,EAAME,OAAON,OACjC,EAYKO,YAAY,yBAInB,E,UC3BD,EAA4B,6BAA5B,EAAqE,6BCqBrE,EAlBkB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbd,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,uBAAIW,EAAQT,QACZ,uBAAIS,EAAQC,SACZ,mBAAQb,UAAWC,EAAea,QARjB,WACnBhB,GAASiB,EAAAA,EAAAA,IAAcH,EAAQI,IAChC,EAMG,sBAKL,EC0BD,EAxC2B,WACzB,IAAM1B,GAAWO,EAAAA,EAAAA,IAAYT,GACvBQ,GAASC,EAAAA,EAAAA,IAAYF,GACrBH,GAAYK,EAAAA,EAAAA,IAAYN,GACxBG,GAAQG,EAAAA,EAAAA,IAAYJ,GAYpBwB,EARW,KAAXrB,EACKN,EAASM,QAAO,SAAAgB,GAAO,OAC5BA,EAAQT,KAAKe,cAAcC,SAASvB,EAAOsB,cADf,IAIzB5B,EAKT,OACE,0BACE,iBAAKU,UAAWC,EAAhB,WACE,yCACCT,IAAcE,IAAS,cAAGM,UAAWC,EAAd,qCACxB,2BACE,SAAC,EAAD,IACCgB,EAAiBG,OAAS,EACzBH,EAAiBI,KAAI,SAAAT,GAAO,OAC1B,SAAC,EAAD,CAA4BA,QAASA,GAArBA,EAAQI,GADE,KAI5B,gBAAKhB,UAAWC,EAAhB,0CAQX,EC3BD,EAbiB,WAGf,OACE,4BACA,SAACqB,EAAA,EAAD,WACE,gDAEF,SAAC,EAAD,MAGH,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactEl/ContactEl.module.css?5b3f","components/ContactEl/ContactEl.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"noContacts\":\"ContactList_noContacts__-QuDG\",\"request\":\"ContactList_request__vajj4\"};","export const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport css from './Filter.module.css';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        pattern=\"^[A-Za-z.'\\- ]+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        placeholder=\"Search for contacts\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactEl\":\"ContactEl_contactEl__ut0SW\",\"removeBtn\":\"ContactEl_removeBtn__kdsAL\"};","import { deleteContact } from 'redux/operations/operations';\nimport css from './ContactEl.module.css';\nimport { useDispatch } from 'react-redux';\n\nconst ContactEl = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <div className={css.contactEl}>\n      <p>{contact.name}</p>\n      <p>{contact.phone}</p>\n      <button className={css.removeBtn} onClick={handleDelete}>\n        Remove\n      </button>\n    </div>\n  );\n};\n\nexport default ContactEl;\n","import css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter, selectError, selectIsLoading } from 'redux/selectors';\nimport Filter from 'components/Filter/Filter';\nimport ContactEl from 'components/ContactEl/ContactEl';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading)\n  const error = useSelector(selectError)\n\n\n  const filterContacts = () => {\n    if (filter !== '') {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n    return contacts;\n  };\n\n  const filteredContacts = filterContacts();\n\n  return (\n    <div>\n      <div className={css.contactList}>\n        <h2>Contact List</h2>\n        {isLoading && !error && <p className={css.request}>Request in progress...</p>}\n        <ul>\n          <Filter />\n          {filteredContacts.length > 0 ? (\n            filteredContacts.map(contact => (\n              <ContactEl key={contact.id} contact={contact} />\n            ))\n          ) : (\n            <div className={css.noContacts}>\n              No contacts available\n            </div>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// import { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  // const dispatch = useDispatch();\n\n  return (\n    <div>\n    <Helmet>\n      <title>Your contacts</title>\n    </Helmet>\n    <ContactList/>\n    </div>\n  );\n};\n\nexport default Contacts"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","useSelector","dispatch","useDispatch","className","css","type","name","value","pattern","title","onChange","event","setFilter","target","placeholder","contact","phone","onClick","deleteContact","id","filteredContacts","toLowerCase","includes","length","map","Helmet"],"sourceRoot":""}